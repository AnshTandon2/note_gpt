{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { FaArrowLeft, FaArrowRight, FaRedo, FaCog, FaDownload, FaPlus } from \"react-icons/fa\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport \"./FlashcardsPage.css\";\nfunction FlashcardsPage() {\n  _s();\n  var _location$state;\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [studyMode, setStudyMode] = useState(\"review\");\n  const [settings, setSettings] = useState({\n    cardStyle: \"basic\",\n    autoFlip: false,\n    flipDuration: 5,\n    showProgress: true\n  });\n  const location = useLocation();\n  const history = useHistory();\n  const text = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.text;\n  const temp = \"valid\";\n  useEffect(() => {\n    if (!text) {\n      setError(\"No content provided for flashcard generation\");\n      setIsLoading(false);\n      return;\n    }\n    generateFlashcards();\n  }, [text]);\n  const generateFlashcards = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await fetch(\"/api/flashcards\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text,\n          settings\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error);\n      setFlashcards(data.flashcards);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleNext = () => {\n    setIsFlipped(false);\n    setCurrentIndex(prev => (prev + 1) % flashcards.length);\n  };\n  const handlePrevious = () => {\n    setIsFlipped(false);\n    setCurrentIndex(prev => (prev - 1 + flashcards.length) % flashcards.length);\n  };\n  const handleFlip = () => {\n    setIsFlipped(!isFlipped);\n  };\n  const handleShuffle = () => {\n    const shuffled = [...flashcards].sort(() => Math.random() - 0.5);\n    setFlashcards(shuffled);\n    setCurrentIndex(0);\n    setIsFlipped(false);\n  };\n  const handleDownload = () => {\n    try {\n      const content = flashcards.map((card, i) => `Card ${i + 1}\\nQ: ${card.front}\\nA: ${card.back}\\n`).join(\"\\n\");\n      const blob = new Blob([content], {\n        type: \"text/plain\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"flashcards.txt\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      setError(\"Failed to download flashcards\");\n    }\n  };\n}\n_s(FlashcardsPage, \"6F93jyVO9g3vI+8lOwekUs9q4aM=\", false, function () {\n  return [useLocation, useHistory];\n});\n_c = FlashcardsPage;\nexport default FlashcardsPage;\nvar _c;\n$RefreshReg$(_c, \"FlashcardsPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useHistory","FaArrowLeft","FaArrowRight","FaRedo","FaCog","FaDownload","FaPlus","LoadingSpinner","FlashcardsPage","_s","_location$state","flashcards","setFlashcards","currentIndex","setCurrentIndex","isFlipped","setIsFlipped","isLoading","setIsLoading","error","setError","studyMode","setStudyMode","settings","setSettings","cardStyle","autoFlip","flipDuration","showProgress","location","history","text","state","temp","generateFlashcards","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","err","message","handleNext","prev","length","handlePrevious","handleFlip","handleShuffle","shuffled","sort","Math","random","handleDownload","content","map","card","i","front","back","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","_c","$RefreshReg$"],"sources":["/Users/anshtandon/VSCODE Projects/note_gpt/src/components/FlashcardsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport {\n  FaArrowLeft,\n  FaArrowRight,\n  FaRedo,\n  FaCog,\n  FaDownload,\n  FaPlus,\n} from \"react-icons/fa\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport \"./FlashcardsPage.css\";\n\nfunction FlashcardsPage() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [studyMode, setStudyMode] = useState(\"review\");\n  const [settings, setSettings] = useState({\n    cardStyle: \"basic\",\n    autoFlip: false,\n    flipDuration: 5,\n    showProgress: true,\n  });\n\n  const location = useLocation();\n  const history = useHistory();\n  const text = location.state?.text;\n  const temp = \"valid\";\n\n  useEffect(() => {\n    if (!text) {\n      setError(\"No content provided for flashcard generation\");\n      setIsLoading(false);\n      return;\n    }\n    generateFlashcards();\n  }, [text]);\n\n  const generateFlashcards = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await fetch(\"/api/flashcards\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          text,\n          settings,\n        }),\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error);\n      setFlashcards(data.flashcards);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleNext = () => {\n    setIsFlipped(false);\n    setCurrentIndex((prev) => (prev + 1) % flashcards.length);\n  };\n\n  const handlePrevious = () => {\n    setIsFlipped(false);\n    setCurrentIndex(\n      (prev) => (prev - 1 + flashcards.length) % flashcards.length\n    );\n  };\n\n  const handleFlip = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  const handleShuffle = () => {\n    const shuffled = [...flashcards].sort(() => Math.random() - 0.5);\n    setFlashcards(shuffled);\n    setCurrentIndex(0);\n    setIsFlipped(false);\n  };\n\n  const handleDownload = () => {\n    try {\n      const content = flashcards\n        .map((card, i) => `Card ${i + 1}\\nQ: ${card.front}\\nA: ${card.back}\\n`)\n        .join(\"\\n\");\n      const blob = new Blob([content], { type: \"text/plain\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"flashcards.txt\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      setError(\"Failed to download flashcards\");\n    }\n  };\n}\n\nexport default FlashcardsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}