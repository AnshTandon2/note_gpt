{"ast":null,"code":"var _jsxFileName = \"/Users/anshtandon/VSCODE Projects/note_gpt/src/components/TranscriptPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { FaFileAlt, FaRegCopy, FaDownload, FaRegEdit, FaPlay, FaArrowLeft, FaRegSave, FaTimes, FaCog, FaCheck } from \"react-icons/fa\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport api from \"../services/api\";\nimport \"./TranscriptPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TranscriptPage() {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTranscript, setEditedTranscript] = useState(\"\");\n  const [videoInfo, setVideoInfo] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [settings, setSettings] = useState({\n    fontSize: \"medium\",\n    lineSpacing: \"normal\",\n    showTimestamps: false,\n    highlightKeywords: true\n  });\n  const [copySuccess, setCopySuccess] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const fetchTranscript = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const params = new URLSearchParams(location.search);\n      const videoUrl = params.get(\"url\");\n      if (!videoUrl) {\n        throw new Error(\"No video URL provided\");\n      }\n      const response = await api.videos.getTranscript(videoUrl);\n      setTranscript(response.transcript);\n      setEditedTranscript(response.transcript);\n      setVideoInfo(response.videoInfo);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [location.search]);\n  useEffect(() => {\n    fetchTranscript();\n  }, [fetchTranscript]);\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(editedTranscript);\n      setCopySuccess(true);\n      setTimeout(() => setCopySuccess(false), 2000);\n    } catch (err) {\n      setError(\"Failed to copy transcript\");\n    }\n  };\n  const handleDownload = () => {\n    try {\n      const blob = new Blob([editedTranscript], {\n        type: \"text/plain\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `transcript-${(videoInfo === null || videoInfo === void 0 ? void 0 : videoInfo.title) || \"video\"}.txt`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      setError(\"Failed to download transcript\");\n    }\n  };\n  const handleSaveEdit = () => {\n    setTranscript(editedTranscript);\n    setIsEditing(false);\n  };\n  const handleGenerateContent = async type => {\n    try {\n      setIsLoading(true);\n      const paths = {\n        summary: \"/summary\",\n        presentation: \"/presentation\",\n        flashcards: \"/flashcards\",\n        quiz: \"/quiz\"\n      };\n\n      // Pre-process content if needed\n      const processedContent = editedTranscript.trim();\n      history.push(paths[type], {\n        text: processedContent,\n        videoInfo,\n        settings\n      });\n    } catch (err) {\n      setError(`Failed to generate ${type}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSettingsChange = newSettings => {\n    setSettings(prev => ({\n      ...prev,\n      ...newSettings\n    }));\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      text: \"Processing transcript...\",\n      size: \"large\",\n      spinnerType: \"wave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcript-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => history.goBack(),\n          title: \"Go back\",\n          children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), \" Back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), videoInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: videoInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"video-metadata\",\n            children: [videoInfo.author, \" \\u2022 \", videoInfo.duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            onClick: () => setIsEditing(!isEditing),\n            title: isEditing ? \"Save changes\" : \"Edit transcript\",\n            children: [isEditing ? /*#__PURE__*/_jsxDEV(FaRegSave, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(FaRegEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 44\n            }, this), isEditing ? \"Save\" : \"Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `action-button ${copySuccess ? \"success\" : \"\"}`,\n            onClick: handleCopy,\n            title: \"Copy to clipboard\",\n            children: [copySuccess ? /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(FaRegCopy, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 44\n            }, this), copySuccess ? \"Copied!\" : \"Copy\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            onClick: handleDownload,\n            title: \"Download transcript\",\n            children: [/*#__PURE__*/_jsxDEV(FaDownload, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), \"Download\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button settings\",\n            onClick: () => setShowSettings(!showSettings),\n            title: \"Transcript settings\",\n            children: [/*#__PURE__*/_jsxDEV(FaCog, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), \"Settings\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        role: \"alert\",\n        children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchTranscript,\n          className: \"retry-button\",\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `transcript-content ${settings.fontSize} ${settings.lineSpacing}`,\n        children: isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedTranscript,\n          onChange: e => setEditedTranscript(e.target.value),\n          className: \"transcript-editor\",\n          placeholder: \"Transcript content...\",\n          spellCheck: \"true\",\n          \"aria-label\": \"Edit transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-text\",\n          children: transcript.split(\"\\n\").map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: paragraph\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generate-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generate Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-grid\",\n          children: [{\n            type: \"summary\",\n            icon: /*#__PURE__*/_jsxDEV(FaFileAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 23\n            }, this),\n            label: \"Summary\",\n            description: \"Generate a concise summary\"\n          }, {\n            type: \"presentation\",\n            icon: /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 23\n            }, this),\n            label: \"Presentation\",\n            description: \"Create presentation slides\"\n          }, {\n            type: \"flashcards\",\n            icon: /*#__PURE__*/_jsxDEV(FaFileAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 23\n            }, this),\n            label: \"Flashcards\",\n            description: \"Generate study flashcards\"\n          }].map(({\n            type,\n            icon,\n            label,\n            description\n          }) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"option-card\",\n            onClick: () => handleGenerateContent(type),\n            disabled: isLoading,\n            children: [icon, /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: () => {\n            setIsEditing(false);\n            setEditedTranscript(transcript);\n          },\n          children: [/*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), \" Cancel\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSaveEdit,\n          children: [/*#__PURE__*/_jsxDEV(FaRegSave, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), \" Save Changes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-content\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Transcript Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(TranscriptPage, \"+C+bN1KAjxrU2As9enVjBXa3wUY=\", false, function () {\n  return [useLocation, useHistory];\n});\n_c = TranscriptPage;\nexport default TranscriptPage;\nvar _c;\n$RefreshReg$(_c, \"TranscriptPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useLocation","useHistory","FaFileAlt","FaRegCopy","FaDownload","FaRegEdit","FaPlay","FaArrowLeft","FaRegSave","FaTimes","FaCog","FaCheck","LoadingSpinner","ErrorBoundary","api","jsxDEV","_jsxDEV","TranscriptPage","_s","transcript","setTranscript","isLoading","setIsLoading","error","setError","isEditing","setIsEditing","editedTranscript","setEditedTranscript","videoInfo","setVideoInfo","showSettings","setShowSettings","settings","setSettings","fontSize","lineSpacing","showTimestamps","highlightKeywords","copySuccess","setCopySuccess","location","history","fetchTranscript","params","URLSearchParams","search","videoUrl","get","Error","response","videos","getTranscript","err","message","handleCopy","navigator","clipboard","writeText","setTimeout","handleDownload","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","title","body","appendChild","click","removeChild","revokeObjectURL","handleSaveEdit","handleGenerateContent","paths","summary","presentation","flashcards","quiz","processedContent","trim","push","text","handleSettingsChange","newSettings","prev","size","spinnerType","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","goBack","author","duration","role","value","onChange","e","target","placeholder","spellCheck","split","map","paragraph","index","icon","label","description","disabled","_c","$RefreshReg$"],"sources":["/Users/anshtandon/VSCODE Projects/note_gpt/src/components/TranscriptPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport {\n  FaFileAlt,\n  FaRegCopy,\n  FaDownload,\n  FaRegEdit,\n  FaPlay,\n  FaArrowLeft,\n  FaRegSave,\n  FaTimes,\n  FaCog,\n  FaCheck,\n} from \"react-icons/fa\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport api from \"../services/api\";\nimport \"./TranscriptPage.css\";\n\nfunction TranscriptPage() {\n  const [transcript, setTranscript] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTranscript, setEditedTranscript] = useState(\"\");\n  const [videoInfo, setVideoInfo] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [settings, setSettings] = useState({\n    fontSize: \"medium\",\n    lineSpacing: \"normal\",\n    showTimestamps: false,\n    highlightKeywords: true,\n  });\n  const [copySuccess, setCopySuccess] = useState(false);\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const fetchTranscript = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const params = new URLSearchParams(location.search);\n      const videoUrl = params.get(\"url\");\n\n      if (!videoUrl) {\n        throw new Error(\"No video URL provided\");\n      }\n\n      const response = await api.videos.getTranscript(videoUrl);\n      setTranscript(response.transcript);\n      setEditedTranscript(response.transcript);\n      setVideoInfo(response.videoInfo);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [location.search]);\n\n  useEffect(() => {\n    fetchTranscript();\n  }, [fetchTranscript]);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(editedTranscript);\n      setCopySuccess(true);\n      setTimeout(() => setCopySuccess(false), 2000);\n    } catch (err) {\n      setError(\"Failed to copy transcript\");\n    }\n  };\n\n  const handleDownload = () => {\n    try {\n      const blob = new Blob([editedTranscript], { type: \"text/plain\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `transcript-${videoInfo?.title || \"video\"}.txt`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      setError(\"Failed to download transcript\");\n    }\n  };\n\n  const handleSaveEdit = () => {\n    setTranscript(editedTranscript);\n    setIsEditing(false);\n  };\n\n  const handleGenerateContent = async (type) => {\n    try {\n      setIsLoading(true);\n      const paths = {\n        summary: \"/summary\",\n        presentation: \"/presentation\",\n        flashcards: \"/flashcards\",\n        quiz: \"/quiz\",\n      };\n\n      // Pre-process content if needed\n      const processedContent = editedTranscript.trim();\n\n      history.push(paths[type], {\n        text: processedContent,\n        videoInfo,\n        settings,\n      });\n    } catch (err) {\n      setError(`Failed to generate ${type}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSettingsChange = (newSettings) => {\n    setSettings((prev) => ({\n      ...prev,\n      ...newSettings,\n    }));\n  };\n\n  if (isLoading) {\n    return (\n      <LoadingSpinner\n        text=\"Processing transcript...\"\n        size=\"large\"\n        spinnerType=\"wave\"\n      />\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <div className=\"transcript-page\">\n        <div className=\"transcript-header\">\n          <button\n            className=\"back-button\"\n            onClick={() => history.goBack()}\n            title=\"Go back\"\n          >\n            <FaArrowLeft /> Back\n          </button>\n\n          {videoInfo && (\n            <div className=\"video-info\">\n              <h1>{videoInfo.title}</h1>\n              <p className=\"video-metadata\">\n                {videoInfo.author} • {videoInfo.duration}\n              </p>\n            </div>\n          )}\n\n          <div className=\"transcript-actions\">\n            <button\n              className=\"action-button\"\n              onClick={() => setIsEditing(!isEditing)}\n              title={isEditing ? \"Save changes\" : \"Edit transcript\"}\n            >\n              {isEditing ? <FaRegSave /> : <FaRegEdit />}\n              {isEditing ? \"Save\" : \"Edit\"}\n            </button>\n            <button\n              className={`action-button ${copySuccess ? \"success\" : \"\"}`}\n              onClick={handleCopy}\n              title=\"Copy to clipboard\"\n            >\n              {copySuccess ? <FaCheck /> : <FaRegCopy />}\n              {copySuccess ? \"Copied!\" : \"Copy\"}\n            </button>\n            <button\n              className=\"action-button\"\n              onClick={handleDownload}\n              title=\"Download transcript\"\n            >\n              <FaDownload />\n              Download\n            </button>\n            <button\n              className=\"action-button settings\"\n              onClick={() => setShowSettings(!showSettings)}\n              title=\"Transcript settings\"\n            >\n              <FaCog />\n              Settings\n            </button>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"error-message\" role=\"alert\">\n            {error}\n            <button onClick={fetchTranscript} className=\"retry-button\">\n              Retry\n            </button>\n          </div>\n        )}\n\n        <div\n          className={`transcript-content ${settings.fontSize} ${settings.lineSpacing}`}\n        >\n          {isEditing ? (\n            <textarea\n              value={editedTranscript}\n              onChange={(e) => setEditedTranscript(e.target.value)}\n              className=\"transcript-editor\"\n              placeholder=\"Transcript content...\"\n              spellCheck=\"true\"\n              aria-label=\"Edit transcript\"\n            />\n          ) : (\n            <div className=\"transcript-text\">\n              {transcript.split(\"\\n\").map((paragraph, index) => (\n                <p key={index}>{paragraph}</p>\n              ))}\n            </div>\n          )}\n        </div>\n\n        <div className=\"generate-options\">\n          <h2>Generate Content</h2>\n          <div className=\"options-grid\">\n            {[\n              {\n                type: \"summary\",\n                icon: <FaFileAlt />,\n                label: \"Summary\",\n                description: \"Generate a concise summary\",\n              },\n              {\n                type: \"presentation\",\n                icon: <FaPlay />,\n                label: \"Presentation\",\n                description: \"Create presentation slides\",\n              },\n              {\n                type: \"flashcards\",\n                icon: <FaFileAlt />,\n                label: \"Flashcards\",\n                description: \"Generate study flashcards\",\n              },\n            ].map(({ type, icon, label, description }) => (\n              <button\n                key={type}\n                className=\"option-card\"\n                onClick={() => handleGenerateContent(type)}\n                disabled={isLoading}\n              >\n                {icon}\n                <h3>{label}</h3>\n                <p>{description}</p>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {isEditing && (\n          <div className=\"edit-actions\">\n            <button\n              className=\"cancel-button\"\n              onClick={() => {\n                setIsEditing(false);\n                setEditedTranscript(transcript);\n              }}\n            >\n              <FaTimes /> Cancel\n            </button>\n            <button className=\"save-button\" onClick={handleSaveEdit}>\n              <FaRegSave /> Save Changes\n            </button>\n          </div>\n        )}\n\n        {showSettings && (\n          <div className=\"settings-modal\">\n            <div className=\"settings-content\">\n              <h2>Transcript Settings</h2>\n              {/* Add settings controls here */}\n            </div>\n          </div>\n        )}\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default TranscriptPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}