{"ast":null,"code":"var _jsxFileName = \"/Users/anshtandon/VSCODE Projects/note_gpt/src/components/AskQuestionsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { FaArrowLeft, FaSync, FaDownload, FaCopy, FaCog, FaQuestionCircle } from \"react-icons/fa\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport \"./AskQuestionsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AskQuestionsPage() {\n  _s();\n  var _location$state, _location$state2;\n  const [questions, setQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [settings, setSettings] = useState({\n    difficulty: \"mixed\",\n    // easy, medium, hard, mixed\n    type: \"all\",\n    // multiple-choice, open-ended, true-false, all\n    count: 10,\n    topics: [] // Generated from content\n  });\n  const [showSettings, setShowSettings] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const content = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.transcript) || ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.text);\n  useEffect(() => {\n    if (!content) {\n      setError(\"No content provided for question generation\");\n      return;\n    }\n    generateQuestions();\n  }, [content]);\n  const generateQuestions = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await fetch(\"/api/questions/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          content,\n          settings\n        })\n      });\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || \"Failed to generate questions\");\n      }\n      const data = await response.json();\n      setQuestions(data.questions);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleRegenerateQuestions = () => {\n    generateQuestions();\n  };\n  const handleCopyQuestions = async () => {\n    try {\n      const formattedQuestions = questions.map((q, index) => `${index + 1}. ${q.question}\\n${q.type === \"multiple-choice\" ? q.options.map((opt, i) => `   ${String.fromCharCode(97 + i)}) ${opt}`).join(\"\\n\") : \"\"}\\n`).join(\"\\n\");\n      await navigator.clipboard.writeText(formattedQuestions);\n      // Optional: Add success toast notification\n    } catch (err) {\n      setError(\"Failed to copy questions\");\n    }\n  };\n  const handleDownloadQuestions = () => {\n    try {\n      const formattedQuestions = questions.map((q, index) => `Question ${index + 1}:\\n${q.question}\\n${q.type === \"multiple-choice\" ? \"\\nOptions:\\n\" + q.options.map((opt, i) => `${String.fromCharCode(97 + i)}) ${opt}`).join(\"\\n\") : \"\"}\\n${q.explanation ? `\\nExplanation: ${q.explanation}\\n` : \"\"}\\n`).join(\"\\n---\\n\\n\");\n      const blob = new Blob([formattedQuestions], {\n        type: \"text/plain\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"generated-questions.txt\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      setError(\"Failed to download questions\");\n    }\n  };\n  const handleSettingsChange = newSettings => {\n    setSettings(newSettings);\n    generateQuestions();\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      size: \"large\",\n      text: \"Generating questions...\",\n      spinnerType: \"wave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => history.goBack(),\n        title: \"Go back\",\n        children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), \" Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: handleRegenerateQuestions,\n          title: \"Regenerate questions\",\n          children: [/*#__PURE__*/_jsxDEV(FaSync, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), \" Regenerate\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: handleCopyQuestions,\n          title: \"Copy to clipboard\",\n          children: [/*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), \" Copy\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: handleDownloadQuestions,\n          title: \"Download questions\",\n          children: [/*#__PURE__*/_jsxDEV(FaDownload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), \" Download\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button settings\",\n          onClick: () => setShowSettings(!showSettings),\n          title: \"Question settings\",\n          children: [/*#__PURE__*/_jsxDEV(FaCog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), \" Settings\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-content\",\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-number\",\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-type\",\n            children: question.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-difficulty\",\n            children: question.difficulty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-text\",\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), question.type === \"multiple-choice\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-options\",\n          children: question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-letter\",\n              children: String.fromCharCode(97 + optIndex)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this), option]\n          }, optIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this), question.explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(FaQuestionCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.explanation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Question Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(AskQuestionsPage, \"18KofD4utEIdNpG3SAW4jRelbPI=\", false, function () {\n  return [useLocation, useHistory];\n});\n_c = AskQuestionsPage;\nexport default AskQuestionsPage;\nvar _c;\n$RefreshReg$(_c, \"AskQuestionsPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useHistory","FaArrowLeft","FaSync","FaDownload","FaCopy","FaCog","FaQuestionCircle","LoadingSpinner","jsxDEV","_jsxDEV","AskQuestionsPage","_s","_location$state","_location$state2","questions","setQuestions","isLoading","setIsLoading","error","setError","settings","setSettings","difficulty","type","count","topics","showSettings","setShowSettings","location","history","content","state","transcript","text","generateQuestions","response","fetch","method","headers","body","JSON","stringify","ok","data","json","Error","err","message","handleRegenerateQuestions","handleCopyQuestions","formattedQuestions","map","q","index","question","options","opt","i","String","fromCharCode","join","navigator","clipboard","writeText","handleDownloadQuestions","explanation","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","handleSettingsChange","newSettings","size","spinnerType","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","goBack","title","role","option","optIndex","_c","$RefreshReg$"],"sources":["/Users/anshtandon/VSCODE Projects/note_gpt/src/components/AskQuestionsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport {\n  FaArrowLeft,\n  FaSync,\n  FaDownload,\n  FaCopy,\n  FaCog,\n  FaQuestionCircle,\n} from \"react-icons/fa\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport \"./AskQuestionsPage.css\";\n\nfunction AskQuestionsPage() {\n  const [questions, setQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [settings, setSettings] = useState({\n    difficulty: \"mixed\", // easy, medium, hard, mixed\n    type: \"all\", // multiple-choice, open-ended, true-false, all\n    count: 10,\n    topics: [], // Generated from content\n  });\n  const [showSettings, setShowSettings] = useState(false);\n\n  const location = useLocation();\n  const history = useHistory();\n  const content = location.state?.transcript || location.state?.text;\n\n  useEffect(() => {\n    if (!content) {\n      setError(\"No content provided for question generation\");\n      return;\n    }\n    generateQuestions();\n  }, [content]);\n\n  const generateQuestions = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const response = await fetch(\"/api/questions/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          content,\n          settings,\n        }),\n      });\n\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || \"Failed to generate questions\");\n      }\n\n      const data = await response.json();\n      setQuestions(data.questions);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRegenerateQuestions = () => {\n    generateQuestions();\n  };\n\n  const handleCopyQuestions = async () => {\n    try {\n      const formattedQuestions = questions\n        .map(\n          (q, index) =>\n            `${index + 1}. ${q.question}\\n${\n              q.type === \"multiple-choice\"\n                ? q.options\n                    .map(\n                      (opt, i) => `   ${String.fromCharCode(97 + i)}) ${opt}`\n                    )\n                    .join(\"\\n\")\n                : \"\"\n            }\\n`\n        )\n        .join(\"\\n\");\n\n      await navigator.clipboard.writeText(formattedQuestions);\n      // Optional: Add success toast notification\n    } catch (err) {\n      setError(\"Failed to copy questions\");\n    }\n  };\n\n  const handleDownloadQuestions = () => {\n    try {\n      const formattedQuestions = questions\n        .map(\n          (q, index) =>\n            `Question ${index + 1}:\\n${q.question}\\n${\n              q.type === \"multiple-choice\"\n                ? \"\\nOptions:\\n\" +\n                  q.options\n                    .map((opt, i) => `${String.fromCharCode(97 + i)}) ${opt}`)\n                    .join(\"\\n\")\n                : \"\"\n            }\\n${q.explanation ? `\\nExplanation: ${q.explanation}\\n` : \"\"}\\n`\n        )\n        .join(\"\\n---\\n\\n\");\n\n      const blob = new Blob([formattedQuestions], { type: \"text/plain\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"generated-questions.txt\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      setError(\"Failed to download questions\");\n    }\n  };\n\n  const handleSettingsChange = (newSettings) => {\n    setSettings(newSettings);\n    generateQuestions();\n  };\n\n  if (isLoading) {\n    return (\n      <LoadingSpinner\n        size=\"large\"\n        text=\"Generating questions...\"\n        spinnerType=\"wave\"\n      />\n    );\n  }\n\n  return (\n    <div className=\"questions-page\">\n      <div className=\"questions-header\">\n        <button\n          className=\"back-button\"\n          onClick={() => history.goBack()}\n          title=\"Go back\"\n        >\n          <FaArrowLeft /> Back\n        </button>\n\n        <div className=\"questions-actions\">\n          <button\n            className=\"action-button\"\n            onClick={handleRegenerateQuestions}\n            title=\"Regenerate questions\"\n          >\n            <FaSync /> Regenerate\n          </button>\n          <button\n            className=\"action-button\"\n            onClick={handleCopyQuestions}\n            title=\"Copy to clipboard\"\n          >\n            <FaCopy /> Copy\n          </button>\n          <button\n            className=\"action-button\"\n            onClick={handleDownloadQuestions}\n            title=\"Download questions\"\n          >\n            <FaDownload /> Download\n          </button>\n          <button\n            className=\"action-button settings\"\n            onClick={() => setShowSettings(!showSettings)}\n            title=\"Question settings\"\n          >\n            <FaCog /> Settings\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\" role=\"alert\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"questions-content\">\n        {questions.map((question, index) => (\n          <div key={index} className=\"question-card\">\n            <div className=\"question-header\">\n              <span className=\"question-number\">Question {index + 1}</span>\n              <span className=\"question-type\">{question.type}</span>\n              <span className=\"question-difficulty\">{question.difficulty}</span>\n            </div>\n            <p className=\"question-text\">{question.question}</p>\n            {question.type === \"multiple-choice\" && (\n              <div className=\"question-options\">\n                {question.options.map((option, optIndex) => (\n                  <div key={optIndex} className=\"option\">\n                    <span className=\"option-letter\">\n                      {String.fromCharCode(97 + optIndex)}\n                    </span>\n                    {option}\n                  </div>\n                ))}\n              </div>\n            )}\n            {question.explanation && (\n              <div className=\"question-explanation\">\n                <FaQuestionCircle />\n                <p>{question.explanation}</p>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {showSettings && (\n        <div className=\"settings-modal\">\n          <div className=\"settings-content\">\n            <h2>Question Settings</h2>\n            {/* Add settings form components here */}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AskQuestionsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}