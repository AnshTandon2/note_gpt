{"ast":null,"code":"var _jsxFileName = \"/Users/anshtandon/VSCODE Projects/note_gpt/src/components/PresentationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Packer } from \"docx\";\nimport { saveAs } from \"file-saver\";\nimport PptxGenJS from \"pptxgenjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PresentationPage() {\n  _s();\n  const [slides, setSlides] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [presentationType, setPresentationType] = useState(\"pptx\");\n  const [customization, setCustomization] = useState({\n    theme: \"professional\",\n    includeImages: true,\n    slidesPerTopic: 2\n  });\n  const location = useLocation();\n  useEffect(() => {\n    const generateSlides = async () => {\n      try {\n        var _location$state;\n        const response = await fetch(\"/api/generate-slides\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            transcript: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.transcript,\n            options: customization\n          })\n        });\n        const data = await response.json();\n        setSlides(data.slides);\n      } catch (error) {\n        console.error(\"Error generating slides:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    generateSlides();\n  }, [location, customization]);\n  const handleExport = async () => {\n    if (presentationType === \"pptx\") {\n      const pptx = new PptxGenJS();\n      slides.forEach(slide => {\n        const newSlide = pptx.addSlide();\n        newSlide.addText(slide.title, {\n          x: 1,\n          y: 1,\n          fontSize: 24\n        });\n        newSlide.addText(slide.content, {\n          x: 1,\n          y: 2,\n          fontSize: 18\n        });\n      });\n      pptx.writeFile(\"presentation.pptx\");\n    } else {\n      // PDF export logic\n      const blob = await generatePDF(slides);\n      saveAs(blob, \"presentation.pdf\");\n    }\n  };\n  const generatePDF = async slides => {\n    try {\n      // Implementation for PDF generation\n      console.log(\"Generating PDF...\", slides);\n      // Add your PDF generation logic here\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Generating presentation...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"presentation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Presentation Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customization-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: presentationType,\n        onChange: e => setPresentationType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pptx\",\n          children: \"PowerPoint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pdf\",\n          children: \"PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: customization.theme,\n        onChange: e => setCustomization({\n          ...customization,\n          theme: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"professional\",\n          children: \"Professional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"creative\",\n          children: \"Creative\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"minimal\",\n          children: \"Minimal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slides-preview\",\n      children: slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: slide.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: slide.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExport,\n      className: \"export-btn\",\n      children: [\"Export \", presentationType === \"pptx\" ? \"PowerPoint\" : \"PDF\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(PresentationPage, \"4YLeNJe5nbu1mllQ31vhgZSCpyo=\", false, function () {\n  return [useLocation];\n});\n_c = PresentationPage;\nexport default PresentationPage;\nvar _c;\n$RefreshReg$(_c, \"PresentationPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Packer","saveAs","PptxGenJS","jsxDEV","_jsxDEV","PresentationPage","_s","slides","setSlides","isLoading","setIsLoading","presentationType","setPresentationType","customization","setCustomization","theme","includeImages","slidesPerTopic","location","generateSlides","_location$state","response","fetch","method","headers","body","JSON","stringify","transcript","state","options","data","json","error","console","handleExport","pptx","forEach","slide","newSlide","addSlide","addText","title","x","y","fontSize","content","writeFile","blob","generatePDF","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","e","target","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/anshtandon/VSCODE Projects/note_gpt/src/components/PresentationPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Packer } from \"docx\";\nimport { saveAs } from \"file-saver\";\nimport PptxGenJS from \"pptxgenjs\";\n\nfunction PresentationPage() {\n  const [slides, setSlides] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [presentationType, setPresentationType] = useState(\"pptx\");\n  const [customization, setCustomization] = useState({\n    theme: \"professional\",\n    includeImages: true,\n    slidesPerTopic: 2,\n  });\n  const location = useLocation();\n\n  useEffect(() => {\n    const generateSlides = async () => {\n      try {\n        const response = await fetch(\"/api/generate-slides\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            transcript: location.state?.transcript,\n            options: customization,\n          }),\n        });\n\n        const data = await response.json();\n        setSlides(data.slides);\n      } catch (error) {\n        console.error(\"Error generating slides:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    generateSlides();\n  }, [location, customization]);\n\n  const handleExport = async () => {\n    if (presentationType === \"pptx\") {\n      const pptx = new PptxGenJS();\n\n      slides.forEach((slide) => {\n        const newSlide = pptx.addSlide();\n        newSlide.addText(slide.title, { x: 1, y: 1, fontSize: 24 });\n        newSlide.addText(slide.content, { x: 1, y: 2, fontSize: 18 });\n      });\n\n      pptx.writeFile(\"presentation.pptx\");\n    } else {\n      // PDF export logic\n      const blob = await generatePDF(slides);\n      saveAs(blob, \"presentation.pdf\");\n    }\n  };\n\n  const generatePDF = async (slides) => {\n    try {\n      // Implementation for PDF generation\n      console.log(\"Generating PDF...\", slides);\n      // Add your PDF generation logic here\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n    }\n  };\n\n  if (isLoading) return <div>Generating presentation...</div>;\n\n  return (\n    <div className=\"presentation-container\">\n      <h2>Presentation Generator</h2>\n\n      <div className=\"customization-panel\">\n        <select\n          value={presentationType}\n          onChange={(e) => setPresentationType(e.target.value)}\n        >\n          <option value=\"pptx\">PowerPoint</option>\n          <option value=\"pdf\">PDF</option>\n        </select>\n\n        <select\n          value={customization.theme}\n          onChange={(e) =>\n            setCustomization({\n              ...customization,\n              theme: e.target.value,\n            })\n          }\n        >\n          <option value=\"professional\">Professional</option>\n          <option value=\"creative\">Creative</option>\n          <option value=\"minimal\">Minimal</option>\n        </select>\n      </div>\n\n      <div className=\"slides-preview\">\n        {slides.map((slide, index) => (\n          <div key={index} className=\"slide-preview\">\n            <h3>{slide.title}</h3>\n            <p>{slide.content}</p>\n          </div>\n        ))}\n      </div>\n\n      <button onClick={handleExport} className=\"export-btn\">\n        Export {presentationType === \"pptx\" ? \"PowerPoint\" : \"PDF\"}\n      </button>\n    </div>\n  );\n}\n\nexport default PresentationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}